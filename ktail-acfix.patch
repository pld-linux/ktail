--- ktail-0.5.1/acinclude.m4.orig	Mon Apr 16 20:14:21 2001
+++ ktail-0.5.1/acinclude.m4	Wed Jan  2 16:22:41 2002
@@ -315,7 +315,7 @@
 ])
 
 AC_DEFUN(KDE_SUBST_PROGRAMS,
-[AC_REQUIRE([AC_CREATE_KFSSTND])dnl
+[
 
         kde_default_bindirs="/usr/bin /usr/local/bin /opt/local/bin /usr/X11R6/bin /opt/kde/bin /opt/kde2/bin /usr/kde/bin /usr/local/kde/bin"
         if test -n "$KDEDIRS"; then
@@ -530,7 +530,7 @@
 ac_x_libraries=$kde_x_libraries
 ac_x_includes=$kde_x_includes
 
-AC_PATH_X_DIRECT
+_AC_PATH_X_DIRECT
 dnl AC_PATH_X_XMKMF picks /usr/lib as the path for the X libraries.
 dnl Unfortunately, if compiling with the N32 ABI, this is not the correct
 dnl location. The correct location is /usr/lib32 or an undefined value
@@ -540,7 +540,7 @@
 mips-sgi-irix6*)
   ;;
 *)
-  AC_PATH_X_XMKMF
+  _AC_PATH_X_XMKMF
   if test -z "$ac_x_includes"; then
     ac_x_includes="."
   fi
@@ -655,8 +655,6 @@
 them either.])
 fi
 
-])
-
 AC_LANG_RESTORE
 ])
 
@@ -1966,7 +1964,6 @@
 
 AC_DEFUN(KDE_CHECK_COMPILER_FLAG,
 [
-AC_REQUIRE([AC_CHECK_COMPILERS])
 AC_MSG_CHECKING(whether $CXX supports -$1)
 kde_cache=`echo $1 | sed 'y%.=/+-%___p_%'`
 AC_CACHE_VAL(kde_cv_prog_cxx_$kde_cache,
@@ -2091,76 +2088,14 @@
   if test -z "$CC"; then AC_CHECK_PROG(CC, xlc, xlc) fi
   test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
 
-  AC_PROG_CC_WORKS
-  AC_PROG_CC_GNU
+  AC_PROG_CC
 
   if test $ac_cv_prog_gcc = yes; then
     GCC=yes
   else
     GCC=
   fi
 
-  USER_CFLAGS=$CFLAGS
-  CFLAGS=
-
-  if test -z "$CFLAGS"; then
-    if test "$kde_use_debug_code" = "yes"; then
-      AC_PROG_CC_G
-      if test $ac_cv_prog_cc_g = yes; then
-	CFLAGS="-g"
-	case $host in
-   	*-*-linux-gnu)	
-           CFLAGS="$CFLAGS -ansi -W -Wall -pedantic -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -D_XOPEN_SOURCE -D_BSD_SOURCE"
-         ;;
-        esac
-      fi
-    else
-      if test "$GCC" = "yes"; then
-        CFLAGS="-O2"
-      else
-        CFLAGS=""
-      fi
-      if test "$kde_use_debug_define" = "yes"; then
-        CFLAGS="$CFLAGS -DNDEBUG"
-	dnl damn buggy compilers :-(
-	dnl if test "$GCC" = "yes"; then
-    	dnl  CFLAGS="$CFLAGS -fomit-frame-pointer"
-	dnl   CXXFLAGS="$CXXFLAGS -fomit-frame-pointer"
-	dnl fi
-      fi
-    fi
-
-    if test "$kde_use_profiling" = yes; then
-      KDE_PROG_CC_PG
-      if test "$kde_cv_prog_cc_pg" = yes; then
-        CFLAGS="$CFLAGS -pg"
-      fi
-    fi
-
-    if test "$GCC" = "yes"; then
-     CFLAGS="$CFLAGS"
-
-     if test "$kde_use_strict_options" = "yes"; then
-	CFLAGS="$CFLAGS -W -Wall -ansi -pedantic -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings"
-     fi
-    fi
-
-  fi
-
-  case "$host" in
-  *-*-sysv4.2uw*) CFLAGS="$CFLAGS -D_UNIXWARE";;
-  *-*-sysv5uw7*) CFLAGS="$CFLAGS -D_UNIXWARE7";;
-  esac
-
-  if test -n "$USER_CFLAGS"; then
-    CFLAGS="$CFLAGS $USER_CFLAGS"
-  fi
-
-  if test -z "$LDFLAGS" && test "$kde_use_debug_code" = "no" && test "$GCC" = "yes"; then
-     LDFLAGS=""
-  fi
-
-
 dnl this is AC_PROG_CPP. I had to include it here, since autoconf checks
 dnl dependecies between AC_PROG_CPP and AC_PROG_CC (or is it automake?)
 
@@ -2202,43 +2135,12 @@
   if test -z "$CXX"; then AC_CHECK_PROG(CXX, DCC, DCC) fi
   test -z "$CXX" && AC_MSG_ERROR([no acceptable C++-compiler found in \$PATH])
 
-  AC_PROG_CXX_WORKS
-  AC_PROG_CXX_GNU
+  AC_PROG_CXX
 
   if test $ac_cv_prog_gxx = yes; then
     GXX=yes
   fi
 
-  USER_CXXFLAGS=$CXXFLAGS
-  CXXFLAGS=""
-
-  if test -z "$CXXFLAGS"; then
-    if test "$kde_use_debug_code" = "yes"; then
-      AC_PROG_CXX_G
-      if test $ac_cv_prog_cxx_g = yes; then
-        CXXFLAGS="-g"
-	case $host in  dnl
-   	*-*-linux-gnu)
-           CXXFLAGS="$CXXFLAGS -ansi -D_XOPEN_SOURCE -D_BSD_SOURCE -Wbad-function-cast -Wcast-align -Wundef -Wconversion"
-         ;;
-        esac
-      fi
-    else
-      if test "$GXX" = "yes"; then
-         CXXFLAGS="-O2"
-      fi
-      if test "$kde_use_debug_define" = "yes"; then
-         CXXFLAGS="$CXXFLAGS -DNDEBUG"
-      fi
-    fi
-
-    if test "$kde_use_profiling" = yes; then
-      KDE_PROG_CXX_PG
-      if test "$kde_cv_prog_cxx_pg" = yes; then
-        CXXFLAGS="$CXXFLAGS -pg"
-      fi
-    fi
-    
     KDE_CHECK_COMPILER_FLAG(fno-exceptions,
     [
       CXXFLAGS="$CXXFLAGS -fno-exceptions"
@@ -2255,12 +2155,6 @@
 	  CXXFLAGS="$CXXFLAGS -fno-check-new"
 	])
 
-    if test "$GXX" = "yes"; then
-       CXXFLAGS="$CXXFLAGS"
-
-       if test true || test "$kde_use_debug_code" = "yes"; then
-	 CXXFLAGS="$CXXFLAGS -Wall -pedantic -W -Wpointer-arith -Wmissing-prototypes -Wwrite-strings"
-
          KDE_CHECK_COMPILER_FLAG(Wno-long-long,
 	 [
 	   CXXFLAGS="$CXXFLAGS -Wno-long-long"
@@ -2273,18 +2167,6 @@
          [
            CXXFLAGS="$CXXFLAGS -fno-builtin"
          ])
-	
-       fi
-
-       if test "$kde_use_strict_options" = "yes"; then
-	CXXFLAGS="$CXXFLAGS -Wcast-qual -Wbad-function-cast -Wshadow -Wcast-align"
-       fi
-
-       if test "$kde_very_strict" = "yes"; then
-         CXXFLAGS="$CXXFLAGS -Wold-style-cast -Wredundant-decls -Wconversion"
-       fi
-    fi
-  fi
 
     KDE_CHECK_COMPILER_FLAG(fexceptions,
 	[
@@ -2302,24 +2184,6 @@
 	)
     AC_SUBST(USE_RTTI)
 
-    case "$host" in
-      *-*-irix*)  test "$GXX" = yes && CXXFLAGS="$CXXFLAGS -D_LANGUAGE_C_PLUS_PLUS -D__LANGUAGE_C_PLUS_PLUS" ;;
-      *-*-sysv4.2uw*) CXXFLAGS="$CXXFLAGS -D_UNIXWARE";;
-      *-*-sysv5uw7*) CXXFLAGS="$CXXFLAGS -D_UNIXWARE7";;
-      *-*-solaris*) 
-        if test "$GXX" = yes; then
-          libstdcpp=`gcc -print-file-name=libstdc++.so`
-          if test ! -f $libstdcpp; then
-             AC_MSG_ERROR([You've compiled gcc without --enable-shared. This doesn't work with KDE. Please recompile gcc with --enable-shared to receive a libstdc++.so])
-          fi
-        fi
-        ;;
-    esac
-
-    if test -n "$USER_CXXFLAGS"; then
-       CXXFLAGS="$CXXFLAGS $USER_CXXFLAGS"
-    fi
-
     AC_VALIDIFY_CXXFLAGS
 
     AC_MSG_CHECKING(how to run the C++ preprocessor)
@@ -2597,36 +2461,6 @@
     fi
   fi])
 
-dnl From Jim Meyering.
-dnl FIXME: migrate into libit.
-
-AC_DEFUN(AM_FUNC_OBSTACK,
-[AC_CACHE_CHECK([for obstacks], am_cv_func_obstack,
- [AC_TRY_LINK([#include "obstack.h"],
-	      [struct obstack *mem;obstack_free(mem,(char *) 0)],
-	      am_cv_func_obstack=yes,
-	      am_cv_func_obstack=no)])
- if test $am_cv_func_obstack = yes; then
-   AC_DEFINE(HAVE_OBSTACK)
- else
-   LIBOBJS="$LIBOBJS obstack.o"
- fi
-])
-
-dnl From Jim Meyering.  Use this if you use the GNU error.[ch].
-dnl FIXME: Migrate into libit
-
-AC_DEFUN(AM_FUNC_ERROR_AT_LINE,
-[AC_CACHE_CHECK([for error_at_line], am_cv_lib_error_at_line,
- [AC_TRY_LINK([],[error_at_line(0, 0, "", 0, "");],
-              am_cv_lib_error_at_line=yes,
-	      am_cv_lib_error_at_line=no)])
- if test $am_cv_lib_error_at_line = no; then
-   LIBOBJS="$LIBOBJS error.o"
- fi
- AC_SUBST(LIBOBJS)dnl
-])
-
 # Macro to add for using GNU gettext.
 # Ulrich Drepper <drepper@cygnus.com>, 1995.
 
